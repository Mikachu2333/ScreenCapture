name: AutoBuild

on:
  push:
    branches: ["main", "add_auto_build"]
    paths-ignore:
      - ".gitignore"
      - "*.md"
      - "**.txt"
      - "LICENSE"
  pull_request:
    branches: ["main", "add_auto_build"]
    paths-ignore:
      - ".gitignore"
      - "*.md"
      - "**.txt"
      - "LICENSE"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CMAKE_BUILD_PARALLEL_LEVEL: 4

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      actions: write

    env:
      QT_DIR: ${{ github.workspace }}/Qt
      QtMSBuild: ${{ github.workspace }}/QtMSBuild
      QT_VERSION: "6.9.0-static"
      QT_ARCH: "mingw1310_64"

    steps:
      - uses: actions/checkout@v4

      - name: Install Wget, Cmake and Ninja
        shell: pwsh
        run: |
          choco install -y wget
          choco install -y ninja
          choco install -y cmake

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: Install Qt # Dir: 6.9.0-static/msvc2022_64/...
        shell: pwsh
        run: |
          mkdir ${{ env.QT_DIR }}
          $url = "https://github.com/yuanpeirong/buildQt/releases/download/Qt6.9.0_rev0/Qt_${{ env.QT_VERSION }}-Release_${{ env.QT_ARCH }}.7z"
          $output = "$env:TEMP\qt.7z"
          Invoke-WebRequest -Uri $url -OutFile $output
          7z x "$output" -o"${{ env.QT_DIR }}" -y

      - name: Install QtMSBuild
        shell: pwsh
        run: |
          $url = "https://download.qt.io/official_releases/vsaddin/3.3.1/qt-vsaddin-msbuild-3.3.1.zip"
          $output = "$env:TEMP\qt-vsaddin-msbuild.zip"
          $qtMsBuildDir = "${{ env.QtMSBuild }}"

          Write-Host "Downloading Qt VSADDIN MSBuild from $url"
          Invoke-WebRequest -Uri $url -OutFile $output

          Write-Host "Creating directory: $qtMsBuildDir"
          New-Item -ItemType Directory -Force -Path $qtMsBuildDir | Out-Null

          Write-Host "Extracting files to $qtMsBuildDir"
          Expand-Archive -Path $output -DestinationPath $qtMsBuildDir -Force

          Write-Host "QtMSBuild installation completed"

      - name: Build
        shell: pwsh
        env:
          QTMSBUILDS: ${{ env.QtMSBuild }}
          QT_PATH: ${{ env.QT_DIR }}/${{ env.QT_VERSION }}/${{ env.QT_ARCH }}
          QT_MODULE: ${{ env.QT_DIR }}/${{ env.QT_VERSION }}/${{ env.QT_ARCH }}/lib/cmake
        run: |
          mkdir build && cd build
          cmake -G "Ninja" ..
          cmake --build . --config Release

          tree /F /A ${{ github.workspace }} > ${{ github.workspace }}/1.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ScreenCapture-Release
          path: |
            ${{ github.workspace }}/1.txt
